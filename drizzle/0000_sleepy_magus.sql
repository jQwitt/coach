CREATE TABLE IF NOT EXISTS "UserLiftingExercises" (
	"userId" integer,
	"exerciseId" integer
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "LiftingExercises" (
	"id" serial PRIMARY KEY NOT NULL,
	"userId" integer NOT NULL,
	"name" varchar(255) NOT NULL,
	"primaryTarget" varchar(100) NOT NULL,
	"detailedTargets" varchar(100)[] NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "PlanTable" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "PlanTable_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(20) DEFAULT 'free' NOT NULL,
	"dailyConversationLimit" integer DEFAULT 1 NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "UserTags" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "UserTags_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(100) NOT NULL,
	"created" date DEFAULT now() NOT NULL,
	"updated" date
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "UsersLiveCoachConversations" (
	"conversationId" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "UsersLiveCoachConversations_conversationId_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" integer NOT NULL,
	"date" varchar(50) NOT NULL,
	"intent" varchar(50) NOT NULL,
	"fulfilled" boolean DEFAULT false
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Users" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "Users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"authId" varchar(255) NOT NULL,
	"tags" integer[] DEFAULT '{}',
	"firstName" varchar(50) NOT NULL,
	"lastName" varchar(50),
	"email" varchar(100) NOT NULL,
	"plan" integer DEFAULT 1,
	CONSTRAINT "Users_authId_unique" UNIQUE("authId"),
	CONSTRAINT "Users_email_unique" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "WorkoutsLiftingExercises" (
	"workoutId" integer NOT NULL,
	"exerciseId" integer NOT NULL,
	"userId" integer NOT NULL,
	"totalSets" integer NOT NULL,
	"totalReps" integer NOT NULL,
	"maxWeight" varchar(10) NOT NULL,
	"serializedSetData" varchar(255)[] DEFAULT '{}' NOT NULL,
	CONSTRAINT "WorkoutsLiftingExercises_workoutId_exerciseId_pk" PRIMARY KEY("workoutId","exerciseId")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "WorkoutsLifting" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "WorkoutsLifting_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" integer NOT NULL,
	"tags" integer[] DEFAULT '{}' NOT NULL,
	"name" varchar(255) NOT NULL,
	"date" varchar(12) NOT NULL,
	"timeStarted" varchar(30) NOT NULL,
	"timeCompleted" varchar(30) NOT NULL,
	"duration" varchar(5) NOT NULL
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "LiftingExercises" ADD CONSTRAINT "LiftingExercises_userId_Users_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."Users"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "UsersLiveCoachConversations" ADD CONSTRAINT "UsersLiveCoachConversations_userId_Users_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."Users"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "Users" ADD CONSTRAINT "Users_plan_PlanTable_id_fk" FOREIGN KEY ("plan") REFERENCES "public"."PlanTable"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "WorkoutsLiftingExercises" ADD CONSTRAINT "WorkoutsLiftingExercises_workoutId_WorkoutsLifting_id_fk" FOREIGN KEY ("workoutId") REFERENCES "public"."WorkoutsLifting"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "WorkoutsLiftingExercises" ADD CONSTRAINT "WorkoutsLiftingExercises_exerciseId_LiftingExercises_id_fk" FOREIGN KEY ("exerciseId") REFERENCES "public"."LiftingExercises"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "WorkoutsLiftingExercises" ADD CONSTRAINT "WorkoutsLiftingExercises_userId_Users_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."Users"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "WorkoutsLifting" ADD CONSTRAINT "WorkoutsLifting_userId_Users_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."Users"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
